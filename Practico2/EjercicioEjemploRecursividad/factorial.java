package EjercicioEjemploRecursividad;
// Ejemplo del uso de recursividad en la clase de programacion del dia 8/4/22



public class factorial {

	public static void main(String[] args) {
		System.out.println("el factorial de 5 es : "+factorialN(5));
	}

	public static double factorialN (int n) {
		if (n>1)
			return (n*factorialN(n-1));
		else
			return 1 ;
	}
}





/*
Ejercicio 1.
Implemente un algoritmo recursivo que determine si un arreglo de tamaÃ±o N estÃ¡ ordenado.
1. Â¿QuÃ© complejidad O tiene? (La complejidad en el peor caso)
2. Â¿Trae algÃºn problema hacerlo recursivo? Â¿CuÃ¡l?
3. Â¿QuÃ© cambiarÃ­a si la estructura fuera una lista en lugar de un arreglo?

Ejercicio 2.
Implemente un algoritmo recursivo para buscar un elemento en una lista simple.
Implemente, ademÃ¡s, un algoritmo recursivo para buscar un elemento en un arreglo ordenado
ascendentemente [1 2 3 â€¦].
1. Â¿QuÃ© complejidad O tienen estos algoritmos?
2. Â¿En quÃ© afecta la estructura a estos algoritmos?
3. Â¿Cambia algo que la estructura estÃ© ordenada?

Ejercicio 3.
Implemente un algoritmo recursivo que convierta un nÃºmero en notaciÃ³n decimal a su
equivalente en notaciÃ³n binaria.

Ejercicio 4.
Implemente un algoritmo de ordenamiento por selecciÃ³n en un arreglo.
Implemente un algoritmo de ordenamiento por burbujeo en un arreglo.
1. Â¿QuÃ© complejidad O tienen estos algoritmos?

Ejercicio 5.
Implemente un algoritmo de ordenamiento mergesort para un arreglo de tamaÃ±o N.
Implemente un algoritmo de ordenamiento quicksort para un arreglo de tamaÃ±o N.
1. Â¿CuÃ¡l es su complejidad en el peor caso?
2. Â¿CuÃ¡l es su complejidad promedio?

Ejercicio 6.
Implemente una funciÃ³n que cree un arreglo de tamaÃ±o N con nÃºmeros aleatorios. Corra los
algoritmos de los ejercicios 3 y 4, 10000 veces consecutivas cada uno, y compruebe el tiempo
de ejecuciÃ³n. Haga lo mismo con el mÃ©todo Arrays.sort(...) de Java, y compare los tiempos
obtenidos. Investigue cÃ³mo estÃ¡ implementado el Array.sort()

Ejercicio 7.
Implemente la estructura de Ã?rbol Binario para bÃºsquedas.
MÃ©todos:
â—? Integer getRoot(), boolean hasElem(Integer), boolean isEmpty(), void insert(Integer),
boolean delete(Integer), int getHeight(), void printPosOrder(), void printPreOrder(), void
printInOrder(), List getLongestBranch(), List getFrontera(), Integer getMaxElem(), List
getElemAtLevel(int)
1. Â¿CuÃ¡l es la complejidad de cada uno de estos mÃ©todos?
*/